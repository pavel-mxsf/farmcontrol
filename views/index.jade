extends layout

block content
  div(ng:app="farmControl", ng:controller="MainPanelCtrl", ng:init="getCommands()", ng:cloak)
    div.navbar
      div.navbar-inner
        div.container(style="width: auto;")
            a.brand(href="#") RenderFarmControl
            ul.nav
                li.dropdown
                    a.dropdown-toggle(data-toggle="dropdown", href="#") Multiple
                        b.caret
                    ul.dropdown-menu(role="menu", aria-labeledby="dlabel")
                        li
                            a(ng:show="showCheckboxes", ng:click="offCheckboxes()") Hide
                        li
                            a(ng:show="!showCheckboxes", ng:click="onCheckboxes()") Show
                        li.divider(ng:show="showCheckboxes")
                        li
                            a(ng:show="showCheckboxes", ng:click="selectAll()") Select All
                        li
                            a(ng:show="showCheckboxes", ng:click="selectNone()") Select None
                        li.dropdown-submenu(ng:show="showCheckboxes")
                            a(href="#") Actions
                            ul.dropdown-menu
                                li
                                    a(href="#",ng:click="wolSelected()") WOL
                                li.divider(ng:show="showCheckboxes")
                                li(ng:repeat="cmd in commands")
                                    a(href="#",ng:click="cmdSelected(cmd)") {{cmd.name}}
                li
                    a(href='/users') Manage Users
            a(href="/logout").btn.btn-inverse.pull-right Logout
            span.pull-right.navbar-text= 'Logged as ' + user

    table.table
      tbody(ng:repeat="(key, value) in info.data", ng:init="showDetails = false")
        tr
            td(style="height:30px").center
              div.squaredThree(ng:show="showCheckboxes",style="width:30px;height:30px;padding:auto;")
                input(id="{{'cb'+value.fullInfo.hostname}}", type="checkbox", value="None",name="check",ng:model="info.data[key].selected",style="")
                label(for="{{'cb'+value.fullInfo.hostname}}")
            td
              button.btn.btn-small.btn-inverse(ng:click="showDetails =! showDetails")
                i(ng:class="{'icon-chevron-down':!showDetails,'icon-chevron-up':showDetails}").icon-white
            td()
              h4 {{value.fullInfo.hostname}}
            td
              //cpubar(values="{{value.rtInfo.cpusPerc}}", ng:show="value.rtInfo")
              canvas(smoothie="{{value.rtInfo.cpusPerc}}", height="30px",width="150px", style="margin-right: 10px")
              canvas(smoothie="{{value.rtInfo.hwInfo.cpuTemp}}",smoothieType="temp", height="30px", width="150px", ng:show="value.rtInfo.hwInfo.cpuTemp.length")
            td
              div(style="width:150px;height:30px;margin-bottom:0px",ng:show="value.rtInfo").progress
                div.bar(style="width: {{150-value.rtInfo.freemem/value.fullInfo.totalmem*150}}px;")
                div(style="position:absolute;margin-top:11px;margin-left:5px")
                  span(style="text-align: center") {{value.rtInfo.freemem | memoryMB}} {{value.rtInfo.freemem/value.fullInfo.totalmem*100 | int}}% free
            td(style="padding:0px;")
              div
                button(ng:show="!value.rtInfo && value.fullInfo.mac",ng:click="wol(value.fullInfo.mac)",style="width:50%;", waitbutton).btn.btn-inverse Wake
              div(style="height:30px,width:100%",ng:show="value.rtInfo")
                button(ng:repeat="cmd in commands",ng:click="runCommand(key,cmd)",ng:class="{'btn-success important!':value.rtInfo.processInfo[cmd.process],'btn-inverse':!value.rtInfo.processInfo[cmd.process]}", waitbutton, style="margin:2px;").btn.btn-anim {{cmd.name}}
              //indbutton() test btn
        tr
            td(colspan="99",)
                div(ng:hide="!showDetails")#details
                        div
                            span.badge.badge-success mac: {{value.fullInfo.mac}}
                            span.badge.badge-success ip: {{key}}

                            span.badge.badge-info OS: {{value.fullInfo.type}} {{value.fullInfo.release}}
                            span.badge.badge-info cpuCount: {{value.fullInfo.cpucount}}
                            span.badge.badge-important total ram: {{value.fullInfo.totalmem | memoryMB}}
                            span.badge.badge-important uptime: {{value.rtInfo.uptime/3600 | number:0}}h

                            span.badge.badge-success CPU clocks: {{value.rtInfo.hwInfo.cpuClock | cpucores}}
                            span.badge.badge-warning CPU temperatures: {{value.rtInfo.hwInfo.cpuTemp | cputemps}}


  script(src='/js/libs/smoothie.js')
  script(src='/js/mainPanelController.js')